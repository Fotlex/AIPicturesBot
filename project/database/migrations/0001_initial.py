# Generated by Django 5.2.1 on 2025-06-29 11:52

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='without name', max_length=258, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('datetime', models.DateTimeField(verbose_name='Дата/Время')),
                ('is_ok', models.BooleanField(verbose_name='Статус отправки')),
            ],
            options={
                'verbose_name': 'Рассылка',
                'verbose_name_plural': 'Рассылки',
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1024, verbose_name='Промокод')),
                ('count_generations', models.PositiveIntegerField(default=0, verbose_name='Количество генераций')),
                ('count_usage', models.IntegerField(verbose_name='Сколько раз можно использовать')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='Tariffs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('cost', models.PositiveIntegerField(verbose_name='Цена')),
                ('count_generations', models.PositiveIntegerField(verbose_name='Количество генераций')),
            ],
            options={
                'verbose_name': 'Пакет',
                'verbose_name_plural': 'Пакеты',
            },
        ),
        migrations.CreateModel(
            name='UserArchive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_user_id', models.BigIntegerField(unique=True)),
                ('archive_file', models.FileField(upload_to='archives/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('photo', 'Фото'), ('video', 'Видео'), ('document', 'Документ')], verbose_name='Тип вложения')),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('file_id', models.TextField(null=True)),
                ('mailing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attachments', to='database.mailing')),
            ],
            options={
                'verbose_name': 'Вложение',
                'verbose_name_plural': 'Вложения',
            },
        ),
        migrations.CreateModel(
            name='Styles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='without name', max_length=258, verbose_name='Название стиля')),
                ('capture_for_lora', models.TextField(blank=True, null=True, verbose_name='Промо для генерирования')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='styles', to='database.categories')),
            ],
            options={
                'verbose_name': 'Стиль',
                'verbose_name_plural': 'Стили',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('photo_format', models.CharField(default='square_hd', max_length=15, verbose_name='Формат фото')),
                ('generation_count', models.IntegerField(default=0, verbose_name='Количество генераций')),
                ('refferal_link', models.CharField(blank=True, null=True)),
                ('current_avatar_id', models.UUIDField(blank=True, null=True)),
                ('is_pay_error_avatar', models.BooleanField(default=False)),
                ('referrer_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='database.user')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(help_text='ID платежа в ЮKassa', max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Сумма платежа', max_digits=10, verbose_name='Сумма')),
                ('status', models.CharField(choices=[('pending', 'Ожидание'), ('succeeded', 'Успешно'), ('canceled', 'Отменен')], default='pending', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='database.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Платеж Юкасса',
                'verbose_name_plural': 'Платежи Юкасса',
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Model', max_length=100)),
                ('api_name', models.CharField(default='Уникальное имя для API LoRA', editable=False, max_length=150, unique=True, verbose_name='Уникальное имя для API LoRA')),
                ('is_complete', models.BooleanField(default=False)),
                ('trigger_phrase', models.CharField(default='Уникальная тригер-фраза для API LoRA', max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужчина'), ('female', 'Женщина')], max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avatars', to='database.user')),
            ],
            options={
                'verbose_name': 'Аватар',
                'verbose_name_plural': 'Аватары',
            },
        ),
        migrations.CreateModel(
            name='UserPromocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_promocode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocodes', to='database.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_users', to='database.user')),
            ],
        ),
    ]
